// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VivaSoftPractice.Data;

#nullable disable

namespace VivaSoftPractice.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20240307154243_Item table added with the seed")]
    partial class Itemtableaddedwiththeseed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("VivaSoftPractice.Model.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = new Guid("842c3155-4455-45f5-badf-939b8c75e7b8"),
                            Name = "andoid",
                            Price = 327844.58000000002
                        },
                        new
                        {
                            Id = new Guid("3d8fe8ff-ea99-4cfb-a1ec-a538cd7d3815"),
                            Name = "samsung",
                            Price = 6434.96
                        },
                        new
                        {
                            Id = new Guid("241fb4eb-4038-4999-a4d0-9586e93027c0"),
                            Name = "honda",
                            Price = 434.77999999999997
                        },
                        new
                        {
                            Id = new Guid("3ee54b58-7beb-4603-a716-df643bdbfe39"),
                            Name = "facewash",
                            Price = 327844.58000000002
                        },
                        new
                        {
                            Id = new Guid("5200c877-2f50-4832-b76b-96045bf827f2"),
                            Name = "mini TV",
                            Price = 6434.96
                        },
                        new
                        {
                            Id = new Guid("445cbfbf-b91b-4faa-a30d-a553ef37ff38"),
                            Name = "Less",
                            Price = 434.77999999999997
                        });
                });

            modelBuilder.Entity("VivaSoftPractice.Model.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7a6f1d29-dca3-4a1c-a9a5-673d78690412"),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("e65413e4-5d90-478f-b79c-eb104b1c1a4f"),
                            Name = "User"
                        },
                        new
                        {
                            Id = new Guid("39c4e74f-ec71-4b27-b58b-94f40165ea52"),
                            Name = "Organizer"
                        });
                });

            modelBuilder.Entity("VivaSoftPractice.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("VivaSoftPractice.Model.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("userRoles");
                });

            modelBuilder.Entity("VivaSoftPractice.Model.UserRole", b =>
                {
                    b.HasOne("VivaSoftPractice.Model.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VivaSoftPractice.Model.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VivaSoftPractice.Model.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("VivaSoftPractice.Model.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
