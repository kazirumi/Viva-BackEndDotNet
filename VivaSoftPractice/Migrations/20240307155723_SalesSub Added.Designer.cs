// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VivaSoftPractice.Data;

#nullable disable

namespace VivaSoftPractice.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20240307155723_SalesSub Added")]
    partial class SalesSubAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("VivaSoftPractice.Model.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = new Guid("cab96629-2b21-42c0-809f-0800e3a44830"),
                            Name = "andoid",
                            Price = 327844.58000000002
                        },
                        new
                        {
                            Id = new Guid("5b0a9674-816c-4d3a-8e1e-34a5f2e1a596"),
                            Name = "samsung",
                            Price = 6434.96
                        },
                        new
                        {
                            Id = new Guid("86485f06-09dc-483e-8022-879af36f6975"),
                            Name = "honda",
                            Price = 434.77999999999997
                        },
                        new
                        {
                            Id = new Guid("17bb0329-aa0a-4feb-9295-a0c06e58ceb0"),
                            Name = "facewash",
                            Price = 327844.58000000002
                        },
                        new
                        {
                            Id = new Guid("55250d19-d2cb-4ba8-983e-851ead58a33a"),
                            Name = "mini TV",
                            Price = 6434.96
                        },
                        new
                        {
                            Id = new Guid("df5fa708-ee28-419d-bfa1-63c2cce15801"),
                            Name = "Less",
                            Price = 434.77999999999997
                        });
                });

            modelBuilder.Entity("VivaSoftPractice.Model.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("95845afb-4be3-497e-b425-aab396a2122d"),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("6b0ae760-0fe1-41bf-a9ea-e569f5358c12"),
                            Name = "User"
                        },
                        new
                        {
                            Id = new Guid("75d1dc9a-1399-4977-8776-bede05194056"),
                            Name = "Organizer"
                        });
                });

            modelBuilder.Entity("VivaSoftPractice.Model.SalesMain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SalesDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("SalesMains");
                });

            modelBuilder.Entity("VivaSoftPractice.Model.SalesSub", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SalesMainId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("TotalSubPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("SalesMainId");

                    b.ToTable("SalesSubs");
                });

            modelBuilder.Entity("VivaSoftPractice.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("VivaSoftPractice.Model.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("userRoles");
                });

            modelBuilder.Entity("VivaSoftPractice.Model.SalesSub", b =>
                {
                    b.HasOne("VivaSoftPractice.Model.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VivaSoftPractice.Model.SalesMain", "SalesMain")
                        .WithMany()
                        .HasForeignKey("SalesMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("SalesMain");
                });

            modelBuilder.Entity("VivaSoftPractice.Model.UserRole", b =>
                {
                    b.HasOne("VivaSoftPractice.Model.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VivaSoftPractice.Model.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VivaSoftPractice.Model.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("VivaSoftPractice.Model.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
