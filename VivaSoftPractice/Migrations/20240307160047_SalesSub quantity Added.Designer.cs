// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VivaSoftPractice.Data;

#nullable disable

namespace VivaSoftPractice.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20240307160047_SalesSub quantity Added")]
    partial class SalesSubquantityAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("VivaSoftPractice.Model.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Name");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a285aaca-500c-434d-b45a-340dca34678a"),
                            Name = "andoid",
                            Price = 327844.58000000002
                        },
                        new
                        {
                            Id = new Guid("5aabda5d-1800-4742-a13b-e7863f71296e"),
                            Name = "samsung",
                            Price = 6434.96
                        },
                        new
                        {
                            Id = new Guid("56ac9b36-2237-4cdd-9689-385372aed46a"),
                            Name = "honda",
                            Price = 434.77999999999997
                        },
                        new
                        {
                            Id = new Guid("1b9eebd4-2480-43d5-b744-2e50060a274b"),
                            Name = "facewash",
                            Price = 327844.58000000002
                        },
                        new
                        {
                            Id = new Guid("71ebd70e-4c4d-4efe-be1e-060033e0cdae"),
                            Name = "mini TV",
                            Price = 6434.96
                        },
                        new
                        {
                            Id = new Guid("938c596e-8db3-4715-a3ed-36fc59c50214"),
                            Name = "Less",
                            Price = 434.77999999999997
                        });
                });

            modelBuilder.Entity("VivaSoftPractice.Model.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("roles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7377658b-ec00-4adb-a0a6-0ebfe87e1fa1"),
                            Name = "Admin"
                        },
                        new
                        {
                            Id = new Guid("61ca20f6-4515-498a-b4e5-cb3d6fc8d863"),
                            Name = "User"
                        },
                        new
                        {
                            Id = new Guid("96fe0d24-a301-4e0d-82c6-b6ac99b6c896"),
                            Name = "Organizer"
                        });
                });

            modelBuilder.Entity("VivaSoftPractice.Model.SalesMain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("SalesDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("TotalAmount")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("SalesMains");
                });

            modelBuilder.Entity("VivaSoftPractice.Model.SalesSub", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("SalesMainId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("TotalSubPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("SalesMainId");

                    b.ToTable("SalesSubs");
                });

            modelBuilder.Entity("VivaSoftPractice.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("users");
                });

            modelBuilder.Entity("VivaSoftPractice.Model.UserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("userRoles");
                });

            modelBuilder.Entity("VivaSoftPractice.Model.SalesSub", b =>
                {
                    b.HasOne("VivaSoftPractice.Model.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VivaSoftPractice.Model.SalesMain", "SalesMain")
                        .WithMany()
                        .HasForeignKey("SalesMainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("SalesMain");
                });

            modelBuilder.Entity("VivaSoftPractice.Model.UserRole", b =>
                {
                    b.HasOne("VivaSoftPractice.Model.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VivaSoftPractice.Model.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VivaSoftPractice.Model.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("VivaSoftPractice.Model.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
